# Generates an artifact containing the result of the `yarn compile` command.

name: Generate PR artifact

on:
  pull_request:
    types: [ opened, synchronize ]
  push:
    branches:
      - '!master'

jobs:
  compile:
    runs-on: ubuntu-22.04
    outputs:
      compilation-result: ${{ steps.compilation.outputs.result }}
      check-translation-result: ${{ steps.check-translation.outputs.result }}
      check-personas-result: ${{ steps.check-personas.outputs.result }}
      test-url: ${{ steps.set-test-url.outputs.fr }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - run: yarn install --immutable
      - run: git log | head && git status
      - id: compilation
        run: |
          # Compiles the model and stores the result -- with escaped special characters.
          body="$(yarn compile:md 2> /dev/null | tail --lines=+3 | head --lines=-1)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=result::${body}"
      - id: check-translation
        run: |
          # Checks the rules translation
          body="$(yarn check:rules --markdown 2> /dev/null | tail --lines=+3 | head --lines=-1)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=result::${body}"
      - id: check-personas
        run: |
          # Checks the personas translation
          body="$(yarn check:personas --markdown 2> /dev/null | tail --lines=+3 | head --lines=-1)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=result::${body}"
      - id: set-test-url
        # Setups the NGC url with the corresponding PR number: https://nosgestesclimat.fr?PR=<pr_number>
        run: echo "::set-output name=fr::${{ steps.deploy-env.outputs.name == 'master' && 'https://nosgestesclimat.fr' || format('https://nosgestesclimat.fr?PR={0}', github.event.pull_request.number) }}"

  upload-artifact:
    runs-on: ubuntu-22.04
    needs: compile
    steps:
      - name: Create artifact
        run: |
          mkdir -p artifacts
          echo "
          <h1 align="center">Report for the pull request #${{ github.event.pull_request.number }}</h2>

          <p align="center">:rocket: Test the model from the website: <a href=\"${{ needs.compile.outputs.test-url }}\">${{ needs.compile.outputs.test-url }}</a></p>

          ---

          ### :wrench: Model compilation status

          ${{ needs.compile.outputs.compilation-result }}

          ---

          ### :globe_with_meridians: Translation status

          #### Rules

          ${{ needs.compile.outputs.check-translation-result }}

          #### Personas

          ${{ needs.compile.outputs.check-personas-result }}

          > _You will find more information about the translation in the [dedicated file](https:/github.com/datagir/nosgestesclimat/blob/master/docs/translation.md)._
          " > artifacts/result.md
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: pr_message
          path: artifacts
